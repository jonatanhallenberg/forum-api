openapi: 3.0.0
info:
  title: Forum API
  description: Backend for creating SPA React Forum
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Local environment
  - url: https://forum-api-jkrop.ondigitalocean.app
    description: Production environment
components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
paths:
  /sandbox:
    post:
      summary: Creates a personal sandbox environment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:          # <!--- form field name
                  type: string
                ownerEmail:    # <!--- form field name
                  type: string
              required:
                - name
                - ownerEmail
              example:
                name: 'JontesAPI'
                email: 'jonatan.hallenberg@sprinto.se'
      responses:
        '201':    # status code
          description: The created sandbox object
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  categories:
                    type: array
                    items:
                      type: string
                  users:
                    type: array
                    items:
                      type: string
                  _id:
                    type: string
                  name:
                    type: string
                  ownerEmail:
                    type: string
                  createdAt:
                    type: string
                example:
                  categories: []
                  users: []
                  _id: "6052139a7b1b742fc11a798b"
                  name: "JontesAPI"
                  ownerEmail: "jonatan.hallenberg@sprinto.se"
                  createdAt: "2021-03-17T14:35:06.542Z"
        '409':
          description: Sandbox name is already taken
  /sandbox/{sandboxName}/user:
    post:
      summary: Creates a new user with username and password
      parameters:
        - in: path
          name: sandboxName
          schema:
            type: string
          required: true
          description: Name of the sandbox where to create category
          example: JontesAPI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: 'jonatan'
                password: 'hemlighet123'
      responses:
        '201':
          description: The created sandbox object
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  _id:
                    type: string
                example:
                  _id: "6052139a7b1b742fc11a798b"
        '404':
          description: Sandbox does not exists
        '409':
          description: Username does already exist
  /sandbox/{sandboxName}/category:
    post:
      summary: Creates a new category
      parameters:
        - in: path
          name: sandboxName
          schema:
            type: string
          required: true
          description: Name of the sandbox where to create category
          example: JontesAPI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
              example:
                name: 'Husdjur'   
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  _id:
                    type: string
                example:
                  _id: "6052139a7b1b742fc11a798b"
        '404':
          description: Sandbox does not exists
    get:
      summary: Get all categoris in a sandbox
      parameters:
        - in: path
          name: sandboxName
          schema:
            type: string
          required: true
          description: Name of the sandbox where to create category
          example: JontesAPI
      responses:
        '200':
          description: Successfully loaded content
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    _id:
                      type: string
                    threads:
                      type: array
                      items:
                        type: string
        '404':
          description: Sandbox does not exists
  /category/{categoryId}/thread:
    post:
      summary: Creates a new thread
      parameters:
        - in: path
          name: categoryId
          schema:
            type: string
          required: true
          description: Id for the associated category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
                - content
              example:
                title: 'Min katt'
                content: 'Min katt 채r b채st'
      responses:
        '201':
          description: Thread created successfully
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  _id:
                    type: string
                example:
                  _id: "6052139a7b1b742fc11a798b"
        '404':
          description: Sandbox does not exists
    get:
      summary: Get all threads in category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: string
          required: true
          description: Id for the associated category
      responses:
        '200':
          description: Successfully loaded content
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    _id:
                      type: string
                    threads:
                      type: array
                      items:
                        type: string
        '404':
          description: Sandbox does not exists
  /thread/{threadId}/comment:
    post:
      summary: Creates a comment for a thread
      parameters:
        - in: path
          name: threadId
          schema:
            type: string
          required: true
          description: Id for the associated thread
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
                - content
              example:
                title: 'Min hund'
                content: 'Min hund 채r b채ttre'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  likes:
                    type: array
                    items:
                      type: string
                  _id:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: string
                example:
                  likes: []
                  _id: "6052139a7b1b742fc11a798b"
                  title: "Hej"
                  content: "Hej alla"
                  createdAt: "2021-03-17T21:05:19.435Z"
        '404':
          description: Sandbox does not exists
    get:
      summary: Get all comments in thread
      parameters:
        - in: path
          name: threadId
          schema:
            type: string
          required: true
          description: Id for the associated thread
      responses:
        '200':
          description: Successfully loaded content
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties: 
                    likes:
                      type: array
                      items:
                        type: string
                    _id:
                      type: string
                    tite:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: string
        '404':
          description: Sandbox does not exists
  /thread/{threadId}/like:
    post:
      summary: Creates a like for a thread
      parameters:
        - in: path
          name: threadId
          schema:
            type: string
          required: true
          description: Id for the associated thread
      responses:
        '201':
          description: Like created successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  _id:
                    type: string
                  createdAt:
                    type: string
                example:
                  _id: "6052139a7b1b742fc11a798b"
                  createdAt: "2021-03-17T21:05:19.435Z"
        '404':
          description: Thread not found
  /comment/{commentId}/like:
    post:
      summary: Creates a like for a comment
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
          description: Id for the associated comment
      responses:
        '201':
          description: Like created successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  _id:
                    type: string
                  createdAt:
                    type: string
                example:
                  _id: "6052139a7b1b742fc11a798b"
                  createdAt: "2021-03-17T21:05:19.435Z"
        '404':
          description: Comment not found